"""Create and load pre-built aimagic notebooks for contexts"""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/02_projects.ipynb.

# %% auto 0
__all__ = ['templates', 'create_cell', 'create_nb', 'create_magic_template_cells']

# %% ../nbs/02_projects.ipynb 2
import json
from pathlib import Path

# %% ../nbs/02_projects.ipynb 3
def create_cell(cell_type: str, outputs: list, source: list):
    assert cell_type in ('code','markdown')
    # source must be split on newline - check execnb
    cell = {'cell_type': cell_type, 'execution_count': None, 'metadata': {}, 'source': source} 
    if cell_type == 'code': cell['outputs'] = outputs
    return cell

# %% ../nbs/02_projects.ipynb 4
def create_nb(cells, path):
    assert isinstance(cells, list)
    nb = {"cells": cells, "metadata": {}, "nbformat": 4, "nbformat_minor": 4}
    Path(path).write_text(json.dumps(nb, indent=2))

# %% ../nbs/02_projects.ipynb 5
def create_magic_template_cells(*source):
    return [create_cell('code',[],o) for o in source]

# %% ../nbs/02_projects.ipynb 6
# Instead of saving, want to build these dynamically based on the contexts module.
templates = {
    'fasthtml': (['import ContextKit.projects as ck\n','fh = fasthtml()'],['%%ai -c\n','\n','Read and give very brief explanation of what is in $`llms_ctx` and $`hypermedia_summary`'])
    }
